function arc = healthv7( H,N,LxH,LxN,Length,n )  %H是健康人数，N是不健康人数，LxH是健康生存人年数，LxN是不健康生存人年数
                                              %Length是输入的数据的长度（如39）
                                              %n是在算第二个方程时的参数(即λ)，一般我们取n=0.999...,我们设α=1-n*β
                                              
format long;     %取高精度数
arc=zeros(Length,2); %用来储存计算完成后60~98岁的α和β的值
for j=1:1:Length    %我们可以一直从60岁算到98岁，一共39个组别
a0=0.04; b0=0.94;   %设定的初始值

Hx2_2010=H(j+2);Nx2_2010=N(j+2);  %当前年龄组别大两岁的健康与不健康人数
Hx1_2010=H(j+1);Nx1_2010=N(j+1);  %当前年龄组别大一岁的健康与不健康人数
Hx0_2010=H(j);Nx0_2010=N(j);      %当前年龄组别的健康与不健康人数

LxH0=LxH(j); LxH1=LxH(j+1);LxH2=LxH(j+2); %分别是三个年龄组别的健康生存人年数
LxN0=LxN(j); LxN1=LxN(j+1);LxN2=LxN(j+2); %分别是三个年龄组别的不健康生存人年数

ax0=a0;bx0=b0;      %当前年龄组别的α和β
ax1=a0;bx1=b0;      %下一年龄组别的α和β
  
for i=0:1:100000     %多次迭代，保证收敛性
    
  A=[(LxH1/LxH0)*ax0 ,(LxN1/LxN0)*(1-bx0);
    (LxH1/LxH0)*(1-ax0),  (LxN1/LxN0)*bx0];   %对于于第一个方程的系数矩阵
  D=[(LxH2/LxH1)*ax1 ,(LxN2/LxN1)*(1-bx1);    %分别对当前年龄组别和下一年龄组别分别列矩阵
    (LxH2/LxH1)*(1-ax1),  (LxN2/LxN1)*bx1];

  b=[Nx1_2010;Hx1_2010]; %增广矩阵列
  x=A\b;  %2009年的当前年龄组别健康与不健康的人数
  e=[Nx2_2010;Hx2_2010];%增广矩阵列
  z=D\e;  %2009年的下一年龄组别健康与不健康的人数
  
  
   H3=(x(1)+Hx0_2010)/2; %平均后的当前年龄组别中健康与不健康的人数
   N3=(x(2)+Nx0_2010)/2;
   H4=(z(1)+Hx1_2010)/2; %平均后的下一年龄组别中健康与不健康的人数
   N4=(z(2)+Nx1_2010)/2;
   
bx0=(H3*(LxH1/LxH0)+N3*(LxN1/LxN0)-Nx1_2010)/(H3*(LxH1/LxH0)*n+N3*(LxN1/LxN0));
ax0=1-n*bx0; 
%在这里我们设置α=1-n*β，以逼近的思想使得n接近于1，在这里我们可以将n取为0.999...
%ax0和bx0是当前年龄组的转移概率

bx1=(H4*(LxH2/LxH1)+N4*(LxN2/LxN1)-Nx2_2010)/(H4*(LxH2/LxH1)*n+N4*(LxN2/LxN1));
ax1=1-n*bx1;    
%ax1和bx1是下一年龄组的转移概率
end
  arc(j,1)=ax0;  %存入结果
  arc(j,2)=bx0;
end
end